//SG_REFLECTION_BEGIN(200)
//attribute vec4 boneData 5
//attribute vec3 blendShape0Pos 6
//attribute vec3 blendShape0Normal 12
//attribute vec3 blendShape1Pos 7
//attribute vec3 blendShape1Normal 13
//attribute vec3 blendShape2Pos 8
//attribute vec3 blendShape2Normal 14
//attribute vec3 blendShape3Pos 9
//attribute vec3 blendShape4Pos 10
//attribute vec3 blendShape5Pos 11
//attribute vec4 position 0
//attribute vec3 normal 1
//attribute vec4 tangent 2
//attribute vec2 texture0 3
//attribute vec2 texture1 4
//attribute vec4 color 18
//attribute vec3 positionNext 15
//attribute vec3 positionPrevious 16
//attribute vec4 strandProperties 17
//output vec4 FragColor0 0
//output vec4 FragColor1 1
//output vec4 FragColor2 2
//output vec4 FragColor3 3
//sampler sampler baseTexSmpSC 0:29
//sampler sampler detailNormalTexSmpSC 0:30
//sampler sampler emissiveTexSmpSC 0:31
//sampler sampler intensityTextureSmpSC 0:32
//sampler sampler normalTexSmpSC 0:33
//sampler sampler opacityTexSmpSC 0:34
//sampler sampler reflectionModulationTexSmpSC 0:35
//sampler sampler reflectionTexSmpSC 0:36
//sampler sampler rimColorTexSmpSC 0:37
//sampler sampler sc_ScreenTextureSmpSC 0:42
//sampler sampler z_hitIdAndBarycentricSmp 0:45
//sampler sampler z_rayDirectionsSmpSC 0:46
//texture texture2D baseTex 0:4:0:29
//texture texture2D detailNormalTex 0:5:0:30
//texture texture2D emissiveTex 0:6:0:31
//texture texture2D intensityTexture 0:7:0:32
//texture texture2D normalTex 0:8:0:33
//texture texture2D opacityTex 0:9:0:34
//texture texture2D reflectionModulationTex 0:10:0:35
//texture texture2D reflectionTex 0:11:0:36
//texture texture2D rimColorTex 0:12:0:37
//texture texture2D sc_ScreenTexture 0:24:0:42
//texture utexture2D z_hitIdAndBarycentric 0:27:0:45
//texture texture2D z_rayDirections 0:28:0:46
//ubo float sc_BonesUBO 0:3:96 {
//sc_Bone_t sc_Bones 0:[]:96
//float4 sc_Bones.boneMatrix 0:[3]:16
//float4 sc_Bones.normalMatrix 48:[3]:16
//}
//ubo int UserUniforms 0:47:6176 {
//float4 sc_Time 1376
//float4 sc_UniformConstants 1392
//float4x4 sc_ViewProjectionMatrixArray 1680:[2]:64
//float4x4 sc_ModelViewMatrixArray 1936:[2]:64
//float4x4 sc_ProjectionMatrixArray 2384:[2]:64
//float4x4 sc_ProjectionMatrixInverseArray 2512:[2]:64
//float4x4 sc_ViewMatrixArray 2640:[2]:64
//float4x4 sc_PrevFrameViewProjectionMatrixArray 2896:[2]:64
//float4x4 sc_ModelMatrix 3024
//float4x4 sc_ModelMatrixInverse 3088
//float3x3 sc_NormalMatrix 3152
//float4x4 sc_PrevFrameModelMatrix 3248
//float4 sc_CurrentRenderTargetDims 3456
//sc_Camera_t sc_Camera 3472
//float3 sc_Camera.position 0
//float sc_Camera.aspect 16
//float2 sc_Camera.clipPlanes 24
//float sc_ShadowDensity 3504
//float4 sc_ShadowColor 3520
//float4x4 sc_ProjectorMatrix 3536
//float shaderComplexityValue 3604
//float4 weights0 3616
//float4 weights1 3632
//float4 sc_StereoClipPlanes 3664:[2]:16
//float _sc_framebufferFetchMarker 3700
//float2 sc_TAAJitterOffset 3704
//bool isProxyMode 3824
//int instance_id 3828
//int lray_triangles_last 3832
//bool noEarlyZ 3836
//bool has_animated_pn 3840
//int emitter_stride 3844
//int proxy_offset_position 3848
//int proxy_offset_normal 3852
//int proxy_offset_tangent 3856
//int proxy_offset_color 3860
//int proxy_offset_texture0 3864
//int proxy_offset_texture1 3868
//int proxy_offset_texture2 3872
//int proxy_offset_texture3 3876
//int proxy_format_position 3880
//int proxy_format_normal 3884
//int proxy_format_tangent 3888
//int proxy_format_color 3892
//int proxy_format_texture0 3896
//int proxy_format_texture1 3900
//int proxy_format_texture2 3904
//int proxy_format_texture3 3908
//float correctedIntensity 3968
//float3x3 intensityTextureTransform 4032
//float4 intensityTextureUvMinMax 4080
//float4 intensityTextureBorderColor 4096
//int overrideTimeEnabled 4124
//float overrideTimeElapsed 4128
//float overrideTimeDelta 4132
//int PreviewEnabled 4136
//float alphaTestThreshold 4144
//float3 recolorRed 4160
//float4 baseColor 4176
//float3x3 baseTexTransform 4240
//float4 baseTexUvMinMax 4288
//float4 baseTexBorderColor 4304
//float2 uv2Scale 4320
//float2 uv2Offset 4328
//float2 uv3Scale 4336
//float2 uv3Offset 4344
//float3 recolorGreen 4352
//float3 recolorBlue 4368
//float3x3 emissiveTexTransform 4432
//float4 emissiveTexUvMinMax 4480
//float4 emissiveTexBorderColor 4496
//float3 emissiveColor 4512
//float emissiveIntensity 4528
//float reflectionIntensity 4532
//float3x3 reflectionTexTransform 4592
//float4 reflectionTexUvMinMax 4640
//float4 reflectionTexBorderColor 4656
//float3x3 normalTexTransform 4720
//float4 normalTexUvMinMax 4768
//float4 normalTexBorderColor 4784
//float3x3 detailNormalTexTransform 4848
//float4 detailNormalTexUvMinMax 4896
//float4 detailNormalTexBorderColor 4912
//float3x3 reflectionModulationTexTransform 4976
//float4 reflectionModulationTexUvMinMax 5024
//float4 reflectionModulationTexBorderColor 5040
//float3 rimColor 5056
//float rimIntensity 5072
//float3x3 rimColorTexTransform 5136
//float4 rimColorTexUvMinMax 5184
//float4 rimColorTexBorderColor 5200
//float rimExponent 5216
//float3x3 opacityTexTransform 5280
//float4 opacityTexUvMinMax 5328
//float4 opacityTexBorderColor 5344
//float Port_Speed_N022 5464
//float Port_Speed_N063 5520
//float4 Port_Default_N369 5536
//float Port_Value2_N073 5616
//float3 Port_Default_N132 5664
//float3 Port_Default_N097 5712
//float Port_Strength1_N200 5760
//float3 Port_Default_N113 5776
//float Port_Strength2_N200 5792
//float3 Port_Input1_N257 5824
//float Port_Input1_N264 5856
//float Port_Input1_N268 5860
//float Port_Input1_N270 5864
//float3 Port_Default_N041 5904
//float3 Port_Default_N134 5920
//float3 Port_Default_N170 6016
//float3 Port_Default_N173 6080
//float Port_Default_N204 6152
//float Port_Input2_N072 6164
//float depthRef 6168
//}
//ssbo int layoutIndices 0:0:4 {
//uint _Triangles 0:[]:4
//}
//ssbo float layoutVerticesPN 0:2:4 {
//float _VerticesPN 0:[]:4
//}
//ssbo float layoutVertices 0:1:4 {
//float _Vertices 0:[]:4
//}
//spec_const bool BLEND_MODE_AVERAGE 0
//spec_const bool BLEND_MODE_BRIGHT 1
//spec_const bool BLEND_MODE_COLOR_BURN 2
//spec_const bool BLEND_MODE_COLOR_DODGE 3
//spec_const bool BLEND_MODE_COLOR 4
//spec_const bool BLEND_MODE_DARKEN 5
//spec_const bool BLEND_MODE_DIFFERENCE 6
//spec_const bool BLEND_MODE_DIVIDE 7
//spec_const bool BLEND_MODE_DIVISION 8
//spec_const bool BLEND_MODE_EXCLUSION 9
//spec_const bool BLEND_MODE_FORGRAY 10
//spec_const bool BLEND_MODE_HARD_GLOW 11
//spec_const bool BLEND_MODE_HARD_LIGHT 12
//spec_const bool BLEND_MODE_HARD_MIX 13
//spec_const bool BLEND_MODE_HARD_PHOENIX 14
//spec_const bool BLEND_MODE_HARD_REFLECT 15
//spec_const bool BLEND_MODE_HUE 16
//spec_const bool BLEND_MODE_INTENSE 17
//spec_const bool BLEND_MODE_LIGHTEN 18
//spec_const bool BLEND_MODE_LINEAR_LIGHT 19
//spec_const bool BLEND_MODE_LUMINOSITY 20
//spec_const bool BLEND_MODE_NEGATION 21
//spec_const bool BLEND_MODE_NOTBRIGHT 22
//spec_const bool BLEND_MODE_OVERLAY 23
//spec_const bool BLEND_MODE_PIN_LIGHT 24
//spec_const bool BLEND_MODE_REALISTIC 25
//spec_const bool BLEND_MODE_SATURATION 26
//spec_const bool BLEND_MODE_SOFT_LIGHT 27
//spec_const bool BLEND_MODE_SUBTRACT 28
//spec_const bool BLEND_MODE_VIVID_LIGHT 29
//spec_const bool ENABLE_BASE_TEX 30
//spec_const bool ENABLE_DETAIL_NORMAL 31
//spec_const bool ENABLE_EMISSIVE 32
//spec_const bool ENABLE_NORMALMAP 33
//spec_const bool ENABLE_OPACITY_TEX 34
//spec_const bool ENABLE_RECOLOR 35
//spec_const bool ENABLE_REFLECTION_MODULATION_TEX 36
//spec_const bool ENABLE_RIM_COLOR_TEX 37
//spec_const bool ENABLE_RIM_HIGHLIGHT 38
//spec_const bool ENABLE_RIM_INVERT 39
//spec_const bool ENABLE_STIPPLE_PATTERN_TEST 40
//spec_const bool ENABLE_UV2_ANIMATION 41
//spec_const bool ENABLE_UV2 42
//spec_const bool ENABLE_UV3_ANIMATION 43
//spec_const bool ENABLE_UV3 44
//spec_const bool SC_USE_CLAMP_TO_BORDER_baseTex 45
//spec_const bool SC_USE_CLAMP_TO_BORDER_detailNormalTex 46
//spec_const bool SC_USE_CLAMP_TO_BORDER_emissiveTex 47
//spec_const bool SC_USE_CLAMP_TO_BORDER_intensityTexture 48
//spec_const bool SC_USE_CLAMP_TO_BORDER_normalTex 49
//spec_const bool SC_USE_CLAMP_TO_BORDER_opacityTex 50
//spec_const bool SC_USE_CLAMP_TO_BORDER_reflectionModulationTex 51
//spec_const bool SC_USE_CLAMP_TO_BORDER_reflectionTex 52
//spec_const bool SC_USE_CLAMP_TO_BORDER_rimColorTex 53
//spec_const bool SC_USE_UV_MIN_MAX_baseTex 54
//spec_const bool SC_USE_UV_MIN_MAX_detailNormalTex 55
//spec_const bool SC_USE_UV_MIN_MAX_emissiveTex 56
//spec_const bool SC_USE_UV_MIN_MAX_intensityTexture 57
//spec_const bool SC_USE_UV_MIN_MAX_normalTex 58
//spec_const bool SC_USE_UV_MIN_MAX_opacityTex 59
//spec_const bool SC_USE_UV_MIN_MAX_reflectionModulationTex 60
//spec_const bool SC_USE_UV_MIN_MAX_reflectionTex 61
//spec_const bool SC_USE_UV_MIN_MAX_rimColorTex 62
//spec_const bool SC_USE_UV_TRANSFORM_baseTex 63
//spec_const bool SC_USE_UV_TRANSFORM_detailNormalTex 64
//spec_const bool SC_USE_UV_TRANSFORM_emissiveTex 65
//spec_const bool SC_USE_UV_TRANSFORM_intensityTexture 66
//spec_const bool SC_USE_UV_TRANSFORM_normalTex 67
//spec_const bool SC_USE_UV_TRANSFORM_opacityTex 68
//spec_const bool SC_USE_UV_TRANSFORM_reflectionModulationTex 69
//spec_const bool SC_USE_UV_TRANSFORM_reflectionTex 70
//spec_const bool SC_USE_UV_TRANSFORM_rimColorTex 71
//spec_const bool Tweak_N179 72
//spec_const bool UseViewSpaceDepthVariant 73
//spec_const bool baseTexHasSwappedViews 74
//spec_const bool detailNormalTexHasSwappedViews 75
//spec_const bool emissiveTexHasSwappedViews 76
//spec_const bool intensityTextureHasSwappedViews 77
//spec_const bool normalTexHasSwappedViews 78
//spec_const bool opacityTexHasSwappedViews 79
//spec_const bool reflectionModulationTexHasSwappedViews 80
//spec_const bool reflectionTexHasSwappedViews 81
//spec_const bool rimColorTexHasSwappedViews 82
//spec_const bool sc_BlendMode_AddWithAlphaFactor 83
//spec_const bool sc_BlendMode_Add 84
//spec_const bool sc_BlendMode_AlphaTest 85
//spec_const bool sc_BlendMode_AlphaToCoverage 86
//spec_const bool sc_BlendMode_ColoredGlass 87
//spec_const bool sc_BlendMode_Custom 88
//spec_const bool sc_BlendMode_Max 89
//spec_const bool sc_BlendMode_Min 90
//spec_const bool sc_BlendMode_MultiplyOriginal 91
//spec_const bool sc_BlendMode_Multiply 92
//spec_const bool sc_BlendMode_Normal 93
//spec_const bool sc_BlendMode_PremultipliedAlphaAuto 94
//spec_const bool sc_BlendMode_PremultipliedAlphaHardware 95
//spec_const bool sc_BlendMode_PremultipliedAlpha 96
//spec_const bool sc_BlendMode_Screen 97
//spec_const bool sc_DepthOnly 98
//spec_const bool sc_FramebufferFetch 99
//spec_const bool sc_MotionVectorsPass 100
//spec_const bool sc_OITCompositingPass 101
//spec_const bool sc_OITDepthBoundsPass 102
//spec_const bool sc_OITDepthGatherPass 103
//spec_const bool sc_ProjectiveShadowsCaster 104
//spec_const bool sc_ProjectiveShadowsReceiver 105
//spec_const bool sc_ProxyAlphaOne 106
//spec_const bool sc_RenderAlphaToColor 107
//spec_const bool sc_ScreenTextureHasSwappedViews 108
//spec_const bool sc_ShaderComplexityAnalyzer 109
//spec_const bool sc_TAAEnabled 110
//spec_const bool sc_UseFramebufferFetchMarker 111
//spec_const bool sc_VertexBlendingUseNormals 112
//spec_const bool sc_VertexBlending 113
//spec_const int NODE_13_DROPLIST_ITEM 114
//spec_const int NODE_181_DROPLIST_ITEM 115
//spec_const int NODE_184_DROPLIST_ITEM 116
//spec_const int NODE_228_DROPLIST_ITEM 117
//spec_const int NODE_27_DROPLIST_ITEM 118
//spec_const int NODE_315_DROPLIST_ITEM 119
//spec_const int NODE_38_DROPLIST_ITEM 120
//spec_const int NODE_49_DROPLIST_ITEM 121
//spec_const int NODE_69_DROPLIST_ITEM 122
//spec_const int NODE_76_DROPLIST_ITEM 123
//spec_const int SC_DEVICE_CLASS 124
//spec_const int SC_SOFTWARE_WRAP_MODE_U_baseTex 125
//spec_const int SC_SOFTWARE_WRAP_MODE_U_detailNormalTex 126
//spec_const int SC_SOFTWARE_WRAP_MODE_U_emissiveTex 127
//spec_const int SC_SOFTWARE_WRAP_MODE_U_intensityTexture 128
//spec_const int SC_SOFTWARE_WRAP_MODE_U_normalTex 129
//spec_const int SC_SOFTWARE_WRAP_MODE_U_opacityTex 130
//spec_const int SC_SOFTWARE_WRAP_MODE_U_reflectionModulationTex 131
//spec_const int SC_SOFTWARE_WRAP_MODE_U_reflectionTex 132
//spec_const int SC_SOFTWARE_WRAP_MODE_U_rimColorTex 133
//spec_const int SC_SOFTWARE_WRAP_MODE_V_baseTex 134
//spec_const int SC_SOFTWARE_WRAP_MODE_V_detailNormalTex 135
//spec_const int SC_SOFTWARE_WRAP_MODE_V_emissiveTex 136
//spec_const int SC_SOFTWARE_WRAP_MODE_V_intensityTexture 137
//spec_const int SC_SOFTWARE_WRAP_MODE_V_normalTex 138
//spec_const int SC_SOFTWARE_WRAP_MODE_V_opacityTex 139
//spec_const int SC_SOFTWARE_WRAP_MODE_V_reflectionModulationTex 140
//spec_const int SC_SOFTWARE_WRAP_MODE_V_reflectionTex 141
//spec_const int SC_SOFTWARE_WRAP_MODE_V_rimColorTex 142
//spec_const int baseTexLayout 143
//spec_const int detailNormalTexLayout 144
//spec_const int emissiveTexLayout 145
//spec_const int intensityTextureLayout 146
//spec_const int normalTexLayout 147
//spec_const int opacityTexLayout 148
//spec_const int reflectionModulationTexLayout 149
//spec_const int reflectionTexLayout 150
//spec_const int rimColorTexLayout 151
//spec_const int sc_DepthBufferMode 152
//spec_const int sc_RenderingSpace 153
//spec_const int sc_ScreenTextureLayout 154
//spec_const int sc_ShaderCacheConstant 155
//spec_const int sc_SkinBonesCount 156
//spec_const int sc_StereoRenderingMode 157
//spec_const int sc_StereoRendering_IsClipDistanceEnabled 158
//SG_REFLECTION_END
